---

resource_types:
- name: artifactory 
  type: docker-image
  source:
    repository: pivotalservices/artifactory-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
 
resources:
- name: app
  type: git
  source:
    uri: https://github.com/dhaneshande/cicdwithPCF.git
    branch: master

- name: cf-env
  type: cf
  source:
    api: {{pws-api}}
    username: {{pws-username}}
    password: {{pws-password}}
    organization: {{pws-organization}}
    space: {{pws-space}}
    skip_cert_check: true

- name: uaa-build
  type: artifactory
  source:
    endpoint: {{artifactory-endpoint}}
    repository: {{artifactory-repo}}
    regex: {{artifactory-regex}}
    username: {{artifactory-username}}
    password: {{artifactory-password}}
    skip_ssl_verification: true

- name: alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/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

jobs:
 
- name: Build Unit Tests And Upload to Artifactory
  serial: true
  disable_manual_trigger: false
  plan:
      - get: app
        trigger: true
        
      - task: npm-test
        config:
          platform: linux
          inputs:
            - name: app
          outputs:
            - name: uaa_war
          image_resource:
            type: docker-image
            source: { repository: node, tag: "6" }
          run:
            path: sh
            args: 
            - -exc
            - |
              export TERM=dumb
              cd app
              npm install
              npm run test
              npm run test:coverage
              npm run test:report
              npm pack
              ls -la
              mv ./app-1.0.0.tgz ../uaa_war
              ls -la
  - put: uaa-build
    params:
      file: uaa_war/app-*.tgz			  
        on_success:
          put: alert
          params:
            channel: "#general"
            username: dhanesh
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
            text:   Testing of the app and also storing of build Artifacts to Artifactory is Successfully Done!
        on_failure:
          put: alert
          params:
            channel: "#general"
            username: dhanesh
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
            text:  Test Failed and also storing of build Artifacts to Artifactory Failed !

- name: deploy to pws
  serial: true
  plan:
  - get: app
    trigger: true
    passed:
      - build-artifact and put artifact in jfrog artifactory
  - put: cf-env
    params:
      manifest: app/manifest.yml
      path: app
    on_success:
      put: alert
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  PWS Deployment Success!
    on_failure:
      put: alert
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  PWS Deployment Failed!
