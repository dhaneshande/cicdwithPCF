---

resource_types:
- name: artifactory 
  type: docker-image
  source:
    repository: pivotalservices/artifactory-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: sonar-runner
  type: docker-image
  source:
    repository: cathive/concourse-sonarqube-resource
   
 
resources:
- name: myapp
  type: git
  source:
    uri: https://github.com/dhaneshande/cicdwithPCF.git
    branch: master

- name: cf-env
  type: cf
  source:
    api: {{pws-api}}
    username: {{pws-username}}
    password: {{pws-password}}
    organization: {{pws-organization}}
    space: {{pws-space}}
    skip_cert_check: true
- name: code-analysis
  type: sonar-runner
  source:
    host_url: {{sonar.host.url}}
    login: {{sonar.login}}
    project_key: {{sonar.projectKey}}
    project-name: {{sonar.projectName}}
    encoding: {{sonar.sourceEncoding}}
    sonar-source: {{sonar.sources}}
    sonarproject-dir: {{sonar.projectBaseDir}}
    sonar-suffix: {{sonar.javascript.file.suffixes}}
 
- name: uaa-build
  type: artifactory
  source:
    endpoint: {{artifactory-endpoint}}
    repository: {{artifactory-repo}}
    regex: {{artifactory-regex}}
    username: {{artifactory-username}}
    password: {{artifactory-password}}
    skip_ssl_verification: true

- name: slack
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/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

jobs:
 
- name: Build Unit Tests And Upload to JFrog Artifactory 
  serial: true
  disable_manual_trigger: false    
  plan:
  - get: myapp
    trigger: true
  - task: build
    config:
      platform: linux
      inputs:
      - name: myapp
      outputs:
      - name: uaa_war
      image_resource:
        type: docker-image
        source: { repository: node, tag: "6" }
      run:
        path: sh
        args:
        - -exc
        - |
          export TERM=dumb
          cd myapp
          npm install
          npm run test
          npm run test:coverage
          npm run test:report
          npm pack
          ls -la
          mv ./myapp-0.0.0.tgz ../uaa_war
          ls -la
  - put: uaa-build
    params:
      file: uaa_war/myapp-*.tgz
    on_success:
      put: slack
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  Building of Node.js app unit tests is successfull and storing of the build artifacts to Artifactory is successfull!
    on_failure:
      put: slack
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  Building of Node.js app unit tests Failed and storing of the build artifacts to Artifactory Failed!
- name: SonarScan
  serial: true   
  plan:
  - get: myapp
    passed:
      - Build Unit Tests And Upload to JFrog Artifactory
    trigger: true
  - get: uaa-build
    passed:
      - Build Unit Tests And Upload to JFrog Artifactory
    trigger: true
  - task: build
    config:
      platform: linux
      inputs:
      - name: myapp
      outputs:
      - name: sss
      image_resource:
        type: docker-image
        source: { repository: node, tag: "6" }
      run:
        path: sh
        args:
        - -exc
        - |
          export TERM=dumb
          cd myapp
          ls -la
  - put: code-analysis
    params:
      project_path: myapp
      additional_properties: -Dsonar.projectKey=myproject 
    on_success:
      put: slack
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  Building of Node.js app unit tests is successfull and storing of the build artifacts to Artifactory is successfull!
    on_failure:
      put: slack
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  Building of Node.js app unit tests Failed and storing of the build artifacts to Artifactory Failed!		
- name: deploy to pws
  serial: true
  plan:
  - get: uaa-build
    passed:
      - SonarScan 
    trigger: true
  - get: myapp
    passed:
      - Build Unit Tests And Upload to JFrog Artifactory
    trigger: true
  - task: retrieve
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ubuntu
          tag: "latest"
      inputs:
      - name: uaa-build
      outputs:
      - name: uaaa
      run:
        path: sh
        args:
        - -exc
        - |
          export TERM=dumb
          ls -la
          ls -la uaa-build
          chmod -R 777 uaa-build
          ls -la
          cd uaa-build
          tar -xvzf myapp-0.0.0.tgz
          ls -la
          chmod -R 777 package
          cd package
          ls -la
    
  - put: cf-env
    params:
      manifest: myapp/manifest.yml
      path: myapp
    on_success:
      put: slack
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  PWS Deployment Success!
    on_failure:
      put: slack
      params:
        channel: "#general"
        username: dhanesh
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text:  PWS Deployment Failed!
